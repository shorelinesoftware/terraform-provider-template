---
page_title: "{{ .ProviderShortName | trimspace }}_metric Resource - {{ .ProviderName | trimspace }}"
subcategory: ""
description: |- {{ .RenderedProviderName | trimspace }} metric. A periodic measurement of a system property.
---

# {{ .ProviderShortName | trimspace }}_metric (Resource)

{{ .RenderedProviderName | trimspace }} Metrics are time-series data obtained through tools such as Prometheus
and the {{ .RenderedProviderName | trimspace }} Metric Scraper. In addition to
{{ .RenderedProviderName | trimspace }}'s standard Metrics you can define your own custom metrics using the `{{ .ProviderShortName | trimspace }}_metric`
resource.

## Required Properties

A Metric has only a few required properties:

- name - A unique name for the metric resource.
- value - A valid Op statement that defines a valid Metric query.

## Usage

The following example creates a Metric named `avg_cpu_usage_prev_min` that gets the average CPU usage over
the last minute:

```tf
resource "{{ .ProviderShortName | trimspace }}_metric" "avg_cpu_usage_prev_min" {
  name = "avg_cpu_usage_prev_min"
  value = "cpu_usage | window(60s) | mean(60)"
}
```

### Advanced Usage

You can also create your own Metric queries using any ingested metric known to the
associated {{ .RenderedProviderName | trimspace }} Agent. In the following example we're using Elasticsearch's cluster health status to
create a custom `elasticsearch_red_status` Metric:

```tf
resource "{{ .ProviderShortName | trimspace }}_metric" "elasticsearch_red_status" {
  name = "${var.namespace}_elasticsearch_red_status"
  value = "metric_query(metric_names=\"elasticsearch_cluster_health_status\") | color=\"red\""
  description = "Returns 1 if resource has status red else 0"
}
```

The `elasticsearch_red_status` Metric can now be used as the basis for an Alarm:

```tf
resource "{{ .ProviderShortName | trimspace }}_alarm" "elasticsearch_status_alarm" {
  name = "${var.prefix}_elasticsearch_status_alarm"
  fire_query = "${ {{ .ProviderShortName | trimspace }}_metric.elasticsearch_red_status.name} == 1"
  clear_query = "${ {{ .ProviderShortName | trimspace }}_metric.elasticsearch_red_status.name} == 0"
  description = "Watch Elasticsearch health status."
  resource_query = "pods"
  enabled = true
}
```

-> See the {{ .RenderedProviderName | trimspace }} Metrics and Metric Scraper documentation
for more info.

{{ .SchemaMarkdown | trimspace }}

